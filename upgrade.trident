echo "#######################################################################################################"
echo "Delete the configured K8S Storage Classes, Trident backends, and uninstall Trident"
echo "#######################################################################################################"

# Echo existing version
echo ""
echo "[root@rhel3 ~]# tridentctl -n trident version"
tridentctl -n trident version

# Cleanup up Trident backends and kubernetes storage classes
kubectl delete sc --all
tridentctl -n trident delete backend --all

# Delete existing CRD deployed and used by Trident
tridentctl -n trident obliviate crd --yesireallymeanit

# Uninstall Trident 
tridentctl -n trident uninstall

# Delete trident namespace
kubectl delete ns trident

# Download Trident 20.07
cd
mv trident-installer/ trident-installer_19.07
wget -nv https://github.com/NetApp/trident/releases/download/v20.07.0/trident-installer-20.07.0.tar.gz
tar -xf trident-installer-20.07.0.tar.gz

# Run twice the obliviate alpha-snapshot-crd command due to a known issue
tridentctl -n trident obliviate alpha-snapshot-crd
tridentctl -n trident obliviate alpha-snapshot-crd

echo "#######################################################################################################"
echo "Upgrading RHEL3 to K8s 1.16"
echo "#######################################################################################################"

yum install -y kubeadm-1.16.7-0 --disableexcludes=kubernetes
kubeadm upgrade apply v1.16.7 -y
yum install -y kubelet-1.16.7-0 kubectl-1.16.7-0 --disableexcludes=kubernetes
systemctl restart kubelet
systemctl daemon-reload
sleep 30s

echo "#######################################################################################################"
echo "Upgrading RHEL1 to K8s 1.16"
echo "#######################################################################################################"

#ssh -o "StrictHostKeyChecking no" root@rhel1 yum-config-manager --disable dockerrepo
ssh -o "StrictHostKeyChecking no" root@rhel1 yum install -y kubeadm-1.16.7-0 --disableexcludes=kubernetesclear
ssh -o "StrictHostKeyChecking no" root@rhel1 kubeadm upgrade node 
ssh -o "StrictHostKeyChecking no" root@rhel1 yum install -y kubelet-1.16.7-0 kubectl-1.16.7-0 --disableexcludes=kubernetes
ssh -o "StrictHostKeyChecking no" root@rhel1 systemctl restart kubelet
ssh -o "StrictHostKeyChecking no" root@rhel1 systemctl daemon-reload
sleep 30s

echo "#######################################################################################################"
echo "Upgrading RHEL2 to K8s 1.16"
echo "#######################################################################################################"

ssh -o "StrictHostKeyChecking no" root@rhel2 yum-config-manager --disable dockerrepo
ssh -o "StrictHostKeyChecking no" root@rhel2 yum install -y kubeadm-1.16.7-0 --disableexcludes=kubernetesclear
ssh -o "StrictHostKeyChecking no" root@rhel2 kubeadm upgrade node 
ssh -o "StrictHostKeyChecking no" root@rhel2 yum install -y kubelet-1.16.7-0 kubectl-1.16.7-0 --disableexcludes=kubernetes
ssh -o "StrictHostKeyChecking no" root@rhel2 systemctl restart kubelet
ssh -o "StrictHostKeyChecking no" root@rhel2 systemctl daemon-reload
sleep 30s

echo "#######################################################################################################"
echo "Upgrading RHEL3 to K8s 1.17"
echo "#######################################################################################################"

yum install -y kubeadm-1.17.3-0 --disableexcludes=kubernetes
kubeadm upgrade apply v1.17.3 -y
yum install -y kubelet-1.17.3-0 kubectl-1.17.3-0 --disableexcludes=kubernetes
systemctl restart kubelet
systemctl daemon-reload
sleep 30s

echo "#######################################################################################################"
echo "Upgrading RHEL1 to K8s 1.17"
echo "#######################################################################################################"

ssh -o "StrictHostKeyChecking no" root@rhel1 yum install -y kubeadm-1.17.3-0 --disableexcludes=kubernetesclear
ssh -o "StrictHostKeyChecking no" root@rhel1 kubeadm upgrade node 
ssh -o "StrictHostKeyChecking no" root@rhel1 yum install -y kubelet-1.17.3-0 kubectl-1.17.3-0 --disableexcludes=kubernetes
ssh -o "StrictHostKeyChecking no" root@rhel1 systemctl restart kubelet
ssh -o "StrictHostKeyChecking no" root@rhel1 systemctl daemon-reload
sleep 30s

echo "#######################################################################################################"
echo "Upgrading RHEL2 to K8s 1.17"
echo "#######################################################################################################"

ssh -o "StrictHostKeyChecking no" root@rhel2 yum install -y kubeadm-1.17.3-0 --disableexcludes=kubernetesclear
ssh -o "StrictHostKeyChecking no" root@rhel2 kubeadm upgrade node 
ssh -o "StrictHostKeyChecking no" root@rhel2 yum install -y kubelet-1.17.3-0 kubectl-1.17.3-0 --disableexcludes=kubernetes
ssh -o "StrictHostKeyChecking no" root@rhel2 systemctl restart kubelet
ssh -o "StrictHostKeyChecking no" root@rhel2 systemctl daemon-reload
sleep 30s

echo "#######################################################################################################"
echo "Upgrading RHEL3 to K8s 1.18"
echo "#######################################################################################################"

yum install -y kubeadm-1.18.0-0 --disableexcludes=kubernetes
kubeadm upgrade apply v1.18.0 -y
yum install -y kubelet-1.18.0-0 kubectl-1.18.0-0 --disableexcludes=kubernetes
systemctl restart kubelet
systemctl daemon-reload
sleep 30s

echo "#######################################################################################################"
echo "Upgrading RHEL1 to K8s 1.18"
echo "#######################################################################################################"

ssh -o "StrictHostKeyChecking no" root@rhel1 yum install -y kubeadm-1.18.0-0 --disableexcludes=kubernetesclear
ssh -o "StrictHostKeyChecking no" root@rhel1 kubeadm upgrade node 
ssh -o "StrictHostKeyChecking no" root@rhel1 yum install -y kubelet-1.18.0-0 kubectl-1.18.0-0--disableexcludes=kubernetes
ssh -o "StrictHostKeyChecking no" root@rhel1 systemctl restart kubelet
ssh -o "StrictHostKeyChecking no" root@rhel1 systemctl daemon-reload
sleep 30s

echo "#######################################################################################################"
echo "Upgrading RHEL2 to K8s 1.18"
echo "#######################################################################################################"

ssh -o "StrictHostKeyChecking no" root@rhel2 yum install -y kubeadm-1.18.0-0 --disableexcludes=kubernetesclear
ssh -o "StrictHostKeyChecking no" root@rhel2 kubeadm upgrade node 
ssh -o "StrictHostKeyChecking no" root@rhel2 yum install -y kubelet-1.18.0-0 kubectl-1.18.0-0 --disableexcludes=kubernetes
ssh -o "StrictHostKeyChecking no" root@rhel2 systemctl restart kubelet
ssh -o "StrictHostKeyChecking no" root@rhel2 systemctl daemon-reload
sleep 30s

echo "#######################################################################################################"
echo "Upgrading Kubernetes to 1.18 is complete"
echo "#######################################################################################################"

echo "#######################################################################################################"
echo "Upgrading Trident to v20.07"
echo "#######################################################################################################"

cd /root
mv trident-installer/ trident-installer_old
wget https://github.com/NetApp/trident/releases/download/v20.07.0/trident-installer-20.07.0.tar.gz
tar -xf trident-installer-20.07.0.tar.gz
cd /root/trident-installer
kubectl create namespace trident
kubectl create -f deploy/crds/trident.netapp.io_tridentprovisioners_crd_post1.16.yaml
kubectl create -f deploy/bundle.yaml
kubectl create -f deploy/crds/tridentprovisioner_cr.yaml
kubectl get tprov -n trident
kubectl describe tprov trident -n trident
tridentctl version -n trident
tridentctl get backends -n trident
kubectl describe tprov trident -n trident

echo "#######################################################################################################"
echo "Upgraded Trident to v20.07"
echo "#######################################################################################################"
cd /root
git clone https://github.com/kmanoj/Trident_tests

echo "#######################################################################################################"
echo "Configure OnTap - Ensure that passwordless ssh is configured from rhel3 to OnTap cluster1"
echo "#######################################################################################################"
ssh admin@cluster1 vserver create -vserver iscsisvm1 -subtype default -rootvolume iscsisvm1_root -rootvolume-security-style unix -language C.UTF-8 -snapshot-policy none -data-services data-iscsi
ssh admin@cluster1 net int create -vserver iscsisvm1 -lif iscsi_lif1 -service-policy default-data-blocks -role data -data-protocol iscsi -address 192.168.0.151 -netmask 255.255.255.0 -home-node cluster1-01 -home-port e0d ssh admin@cluster1 -status-admin up
ssh admin@cluster1 net int create -vserver iscsisvm1 -lif iscsi_lif2 -service-policy default-data-blocks -role data -data-protocol iscsi -address 192.168.0.152 -netmask 255.255.255.0 -home-node cluster1-01 -home-port e0d ssh admin@cluster1 -status-admin up
ssh admin@cluster1 net int create -vserver iscsisvm1 -lif iscsisvm1_mgmt -service-policy default-management -role data -data-protocol none -address 192.168.0.145 -netmask 255.255.255.0 -home-node cluster1-01 -home-port e0c ssh admin@cluster1 -status-admin up

ssh admin@cluster1 vserver modify -vserver iscsisvm1 -aggr-list aggr1,aggr2

ssh admin@cluster1 iscsi create -vserver iscsisvm1

ssh admin@cluster1 security login role create -vserver iscsisvm1 -role trident_role -cmddirname DEFAULT -access none

# grant common Trident permissions
ssh admin@cluster1 security login role create -vserver iscsisvm1 -role trident_role -cmddirname "event generate-autosupport-log" -access all
ssh admin@cluster1 security login role create -vserver iscsisvm1 -role trident_role -cmddirname "network interface" -access readonly
ssh admin@cluster1 security login role create -vserver iscsisvm1 -role trident_role -cmddirname "version" -access readonly
ssh admin@cluster1 security login role create -vserver iscsisvm1 -role trident_role -cmddirname "vserver" -access readonly
ssh admin@cluster1 security login role create -vserver iscsisvm1 -role trident_role -cmddirname "vserver nfs show" -access readonly
ssh admin@cluster1 security login role create -vserver iscsisvm1 -role trident_role -cmddirname "volume snapshot" -access all
ssh admin@cluster1 security login role create -vserver iscsisvm1 -role trident_role -cmddirname "volume clone" -access all
ssh admin@cluster1 security login role create -vserver iscsisvm1 -role trident_role -cmddirname "volume mount" -access all
ssh admin@cluster1 security login role create -vserver iscsisvm1 -role trident_role -cmddirname "snapmirror" -access all

# grant ontap-san Trident permissions
ssh admin@cluster1 security login role create -vserver iscsisvm1 -role trident_role -cmddirname "vserver iscsi show" -access readonly
ssh admin@cluster1 security login role create -vserver iscsisvm1 -role trident_role -cmddirname "lun" -access all

# grant ontap-nas-economy Trident permissions
ssh admin@cluster1 security login role create -vserver iscsisvm1 -role trident_role -cmddirname "vserver export-policy create" -access all
ssh admin@cluster1 security login role create -vserver iscsisvm1 -role trident_role -cmddirname "vserver export-policy rule create" -access all

# create a new Trident user with Trident role

ssh admin@cluster1 security login create -user-or-group-name trident_user -application ontapi -authentication-method password -role trident_role -vserver iscsisvm1

##Create igroup

ssh admin@cluster1 igroup create -vserver iscsisvm1 -igroup iscsi-ig1 -protocol iscsi -ostype linux
###################################################################################################

# Create trident role on nfs_svm

ssh admin@cluster1 vserver modify -vserver svm1 -aggr-list aggr1,aggr2
ssh admin@cluster1 vserver rename -vserver svm1 -newname nfs_svm
ssh admin@cluster1 security login role create -vserver nfs_svm -role trident_role -cmddirname DEFAULT -access none

# grant common Trident permissions
ssh admin@cluster1 security login role create -vserver nfs_svm -role trident_role -cmddirname "event generate-autosupport-log" -access all
ssh admin@cluster1 security login role create -vserver nfs_svm -role trident_role -cmddirname "network interface" -access readonly
ssh admin@cluster1 security login role create -vserver nfs_svm -role trident_role -cmddirname "version" -access readonly
ssh admin@cluster1 security login role create -vserver nfs_svm -role trident_role -cmddirname "vserver" -access readonly
ssh admin@cluster1 security login role create -vserver nfs_svm -role trident_role -cmddirname "vserver nfs show" -access readonly
ssh admin@cluster1 security login role create -vserver nfs_svm -role trident_role -cmddirname "volume snapshot" -access all
ssh admin@cluster1 security login role create -vserver nfs_svm -role trident_role -cmddirname "volume clone" -access all
ssh admin@cluster1 security login role create -vserver nfs_svm -role trident_role -cmddirname "volume mount" -access all
ssh admin@cluster1 security login role create -vserver nfs_svm -role trident_role -cmddirname "snapmirror" -access all

# grant ontap-san Trident permissions
ssh admin@cluster1 security login role create -vserver nfs_svm -role trident_role -cmddirname "vserver iscsi show" -access readonly
ssh admin@cluster1 security login role create -vserver nfs_svm -role trident_role -cmddirname "lun" -access all

# grant ontap-nas-economy Trident permissions
ssh admin@cluster1 security login role create -vserver nfs_svm -role trident_role -cmddirname "vserver export-policy create" -access all
ssh admin@cluster1 security login role create -vserver nfs_svm -role trident_role -cmddirname "vserver export-policy rule create" -access all
ssh admin@cluster1 security login create -user-or-group-name trident_user -application ontapi -authentication-method password -role trident_role -vserver nfs_svm
 

